{"version":3,"file":"static/js/492.20fb7767.chunk.js","mappings":"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","sources":["../node_modules/extend/index.js","../node_modules/inline-style-parser/index.js","../node_modules/is-buffer/index.js","../node_modules/mdurl/encode.js","../node_modules/react-markdown/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/react-markdown/node_modules/react-is/index.js","../node_modules/style-to-object/index.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/unist-util-stringify-position/index.js","../node_modules/vfile-message/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/bail/index.js","../node_modules/unified/node_modules/is-plain-obj/index.js","../node_modules/trough/index.js","../node_modules/unified/lib/index.js","../node_modules/mdast-util-to-string/index.js","../node_modules/micromark-util-chunked/index.js","../node_modules/micromark-util-combine-extensions/index.js","../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../node_modules/micromark-util-character/index.js","../node_modules/micromark-factory-space/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark-util-resolve-all/index.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-util-normalize-identifier/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/decode-named-character-reference/index.dom.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-util-classify-character/index.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/preprocess.js","../node_modules/micromark-util-decode-numeric-character-reference/index.js","../node_modules/micromark-util-decode-string/index.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/micromark/lib/postprocess.js","../node_modules/micromark/lib/parse.js","../node_modules/remark-parse/index.js","../node_modules/remark-parse/lib/index.js","../node_modules/unist-builder/index.js","../node_modules/unist-util-is/index.js","../node_modules/unist-util-visit-parents/index.js","../node_modules/unist-util-visit/index.js","../node_modules/unist-util-position/index.js","../node_modules/mdast-util-definitions/index.js","../node_modules/mdast-util-to-hast/lib/traverse.js","../node_modules/micromark-util-encode/index.js","../node_modules/micromark-util-sanitize-uri/index.js","../node_modules/mdast-util-to-hast/lib/wrap.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/trim-lines/index.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/unist-util-generated/index.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/remark-rehype/lib/index.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/index.js","../node_modules/react-markdown/lib/rehype-filter.js","../node_modules/react-markdown/lib/uri-transformer.js","../node_modules/hast-util-whitespace/index.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/lib/hast-to-react.js","../node_modules/react-markdown/lib/ast-to-react.js","../node_modules/comma-separated-tokens/index.js","../node_modules/space-separated-tokens/index.js","../node_modules/react-markdown/lib/react-markdown.js"],"sourcesContent":["'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\";\n  /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  };\n\n  var exports = {},\n      Op = Object.prototype,\n      hasOwn = Op.hasOwnProperty,\n      $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n      iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n      asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n      toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n        generator = Object.create(protoGenerator.prototype),\n        context = new Context(tryLocsList || []);\n    return generator._invoke = function (innerFn, self, context) {\n      var state = \"suspendedStart\";\n      return function (method, arg) {\n        if (\"executing\" === state) throw new Error(\"Generator is already running\");\n\n        if (\"completed\" === state) {\n          if (\"throw\" === method) throw arg;\n          return doneResult();\n        }\n\n        for (context.method = method, context.arg = arg;;) {\n          var delegate = context.delegate;\n\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel) continue;\n              return delegateResult;\n            }\n          }\n\n          if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n            if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n            context.dispatchException(context.arg);\n          } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n          state = \"executing\";\n          var record = tryCatch(innerFn, self, context);\n\n          if (\"normal\" === record.type) {\n            if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          }\n\n          \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n        }\n      };\n    }(innerFn, self, context), generator;\n  }\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {}\n\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n      NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n            value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n\n      reject(record.arg);\n    }\n\n    var previousPromise;\n\n    this._invoke = function (method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    };\n  }\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (undefined === method) {\n      if (context.delegate = null, \"throw\" === context.method) {\n        if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel;\n        context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          for (; ++i < iterable.length;) {\n            if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n          }\n\n          return next.value = undefined, next.done = !0, next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    return {\n      next: doneResult\n    };\n  }\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) {\n        \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n      }\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n            record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n              hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      }\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\n/**\n * Stringify one point, a position (start and end points), or a node’s\n * positional information.\n *\n * @param {Node|NodeLike|Position|Point|null} [value]\n * @returns {string}\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point|undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position|undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number|undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nexport class VFileMessage extends Error {\n  /**\n   * Constructor of a message for `reason` at `place` from `origin`.\n   * When an error is passed in as `reason`, copies the `stack`.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   */\n  constructor(reason, place, origin) {\n    /** @type {[string|null, string|null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`\n    this.name = stringifyPosition(place) || '1:1'\n    this.message = typeof reason === 'object' ? reason.message : reason\n    this.stack = typeof reason === 'object' ? reason.stack : ''\n\n    /**\n     * Reason for message.\n     * @type {string}\n     */\n    this.reason = this.message\n    /**\n     * If true, marks associated file as no longer processable.\n     * @type {boolean?}\n     */\n    // eslint-disable-next-line no-unused-expressions\n    this.fatal\n    /**\n     * Starting line of error.\n     * @type {number?}\n     */\n    this.line = position.start.line\n    /**\n     * Starting column of error.\n     * @type {number?}\n     */\n    this.column = position.start.column\n    /**\n     * Namespace of warning.\n     * @type {string?}\n     */\n    this.source = parts[0]\n    /**\n     * Category of message.\n     * @type {string?}\n     */\n    this.ruleId = parts[1]\n    /**\n     * Full range information, when available.\n     * Has start and end properties, both set to an object with line and column, set to number?.\n     * @type {Position?}\n     */\n    this.position = position\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * You can use this to specify the source value that’s being reported, which\n     * is deemed incorrect.\n     * @type {string?}\n     */\n    this.actual\n    /**\n     * You can use this to suggest values that should be used instead of\n     * `actual`, one or more values that are deemed as acceptable.\n     * @type {Array<string>?}\n     */\n    this.expected\n    /**\n     * You may add a file property with a path of a file (used throughout the VFile ecosystem).\n     * @type {string?}\n     */\n    this.file\n    /**\n     * You may add a url property with a link to documentation for the message.\n     * @type {string?}\n     */\n    this.url\n    /**\n     * You may add a note property with a long form description of the message (supported by vfile-reporter).\n     * @type {string?}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * @param {string} path\n * @param {string} [ext]\n * @returns {string}\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * @param {Array<string>} segments\n * @returns {string}\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string|undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Note: `normalize` is not exposed as `path.normalize`, so some code is\n * manually removed from it.\n *\n * @param {string} path\n * @returns {string}\n */\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n * @param {boolean} allowAboveRoot\n * @returns {string}\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number|undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {string} path\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * @param {unknown} fileURLOrPath\n * @returns {fileURLOrPath is URL}\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileURLOrPath) {\n  return (\n    fileURLOrPath !== null &&\n    typeof fileURLOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string|URL} path\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * @param {URL} url\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {Record<string, unknown> & {type: string, position?: Position|undefined}} NodeLike\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n *\n * @typedef {'ascii'|'utf8'|'utf-8'|'utf16le'|'ucs2'|'ucs-2'|'base64'|'base64url'|'latin1'|'binary'|'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *   This is a copy of the typing from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Value|Options|VFile|URL} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n * @property {Value} [value]\n * @property {string} [cwd]\n * @property {Array<string>} [history]\n * @property {string|URL} [path]\n * @property {string} [basename]\n * @property {string} [stem]\n * @property {string} [extname]\n * @property {string} [dirname]\n * @property {Data} [data]\n *\n * @typedef Map\n *   Raw source map, see:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n * @property {Array<string>} sources\n * @property {Array<string>} names\n * @property {string|undefined} [sourceRoot]\n * @property {Array<string>|undefined} [sourcesContent]\n * @property {string} mappings\n * @property {string} file\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration: a bunch of keys that will be shallow copied over to the new\n *   file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n * @typedef {<T = ReporterSettings>(files: Array<VFile>, options: T) => string} Reporter\n */\n\nimport buffer from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * If `options` is `string` or `Buffer`, it’s treated as `{value: options}`.\n   * If `options` is a `URL`, it’s treated as `{path: options}`.\n   * If `options` is a `VFile`, shallow copies its data over to the new file.\n   * All fields in `options` are set on the newly created `VFile`.\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * It’s not possible to set either `dirname` or `extname` without setting\n   * either `history`, `path`, `basename`, or `stem` as well.\n   *\n   * @param {Compatible} [value]\n   */\n  constructor(value) {\n    /** @type {Options} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      // @ts-expect-error Looks like a buffer.\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      // @ts-expect-error Looks like file or options.\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     * The first is the original path and the last is the current path.\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     * This is used by vfile reporters.\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Sometimes files have a non-string, compiled, representation.\n     * This can be stored in the `result` field.\n     * One example is when turning markdown into React nodes.\n     * This is used by unified to store non-string results.\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Sometimes files have a source map associated with them.\n     * This can be stored in the `map` field.\n     * This should be a `Map` type, which is equivalent to the `RawSourceMap`\n     * type from the `source-map` module.\n     * @type {Map|undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (prop in options && options[prop] !== undefined) {\n        // @ts-expect-error: TS is confused by the different types for `history`.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) this[prop] = options[prop]\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   * @param {string|URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding} [encoding='utf8']\n   *   When `value` is a `Buffer`, `encoding` is a character encoding to\n   *   understand it as (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding)\n  }\n\n  /**\n   * Constructs a new `VFileMessage`, where `fatal` is set to `false`, and\n   * associates it with the file by adding it to `vfile.messages` and setting\n   * `message.file` to the current filepath.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates an informational message where\n   * `fatal` is set to `null`.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates a fatal message where `fatal` is\n   * set to `true`, and then immediately throws it.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {never}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {void}\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {asserts part is string}\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string|undefined} path\n * @param {string} name\n * @returns {asserts path is string}\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef Options\n * @property {boolean} [includeImageAlt=true]\n */\n\n/**\n * Get the text content of a node.\n * Prefer the node’s plain-text fields, otherwise serialize its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} node\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toString(node, options) {\n  var {includeImageAlt = true} = options || {}\n  return one(node, includeImageAlt)\n}\n\n/**\n * @param {unknown} node\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction one(node, includeImageAlt) {\n  return (\n    (node &&\n      typeof node === 'object' &&\n      // @ts-ignore looks like a literal.\n      (node.value ||\n        // @ts-ignore looks like an image.\n        (includeImageAlt ? node.alt : '') ||\n        // @ts-ignore looks like a parent.\n        ('children' in node && all(node.children, includeImageAlt)) ||\n        (Array.isArray(node) && all(node, includeImageAlt)))) ||\n    ''\n  )\n}\n\n/**\n * @param {Array.<unknown>} values\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array.<string>} */\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {StackItem[]} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Construct[]} */\n\n  const resolveAllConstructs = []\n  /** @type {Chunk[]} */\n\n  let chunks = []\n  /** @type {Token[]} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Construct[]|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Construct[]} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Construct[]} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Chunk[]} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Chunk[]}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Chunk[]} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Chunk[]} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {string[]} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Chunk[]}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Chunk[]} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {UnistParent & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @typedef _CompileDataFields\n * @property {boolean|undefined} expectingFirstListItemValue\n * @property {boolean|undefined} flowCodeInside\n * @property {boolean|undefined} setextHeadingSlurpLineEnding\n * @property {boolean|undefined} atHardBreak\n * @property {'collapsed'|'full'} referenceType\n * @property {boolean|undefined} inReference\n * @property {'characterReferenceMarkerHexadecimal'|'characterReferenceMarkerNumeric'} characterReferenceType\n *\n * @typedef {Record<string, unknown> & Partial<_CompileDataFields>} CompileData\n *\n * @typedef {(tree: Root) => Root|void} Transform\n * @typedef {(this: CompileContext, token: Token) => void} Handle\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n * @typedef {Record<string, Record<string, unknown>|Array<unknown>> & {canContainEols: Array<string>, transforms: Array<Transform>, enter: Handles, exit: Handles}} NormalizedExtension\n * @typedef {Partial<NormalizedExtension>} Extension\n *   An mdast extension changes how markdown tokens are turned into mdast.\n *\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token|undefined, right: Token) => void} OnEnterError\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token, right: Token) => void} OnExitError\n *\n * @typedef CompileContext\n *   mdast compiler context\n * @property {Array<Node | Fragment>} stack\n * @property {Array<[Token, OnEnterError|undefined]>} tokenStack\n * @property {(key: string, value?: unknown) => void} setData\n *   Set data into the key-value store.\n * @property {<K extends string>(key: K) => CompileData[K]} getData\n *   Get data from the key-value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<N extends Node>(this: CompileContext, node: N, token: Token, onError?: OnEnterError) => N} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {NormalizedExtension} config\n *   Configuration.\n *\n * @typedef {{mdastExtensions?: Array<Extension|Array<Extension>>}} FromMarkdownOptions\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n */\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n/**\n * @param value Markdown to parse (`string` or `Buffer`).\n * @param [encoding] Character encoding to understand `value` as when it’s a `Buffer` (`string`, default: `'utf8'`).\n * @param [options] Configuration\n */\n\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options) => Root) &\n   *   ((value: Value, options?: Options) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding} [encoding]\n   * @param {Options} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n\n    return compiler(options)(\n      postprocess(\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options} [options]\n */\n\nfunction compiler(options = {}) {\n  /** @type {NormalizedExtension} */\n  // @ts-expect-error: our base has all required fields, so the result will too.\n  const config = configure(\n    {\n      transforms: [],\n      canContainEols: [\n        'emphasis',\n        'fragment',\n        'heading',\n        'paragraph',\n        'strong'\n      ],\n      enter: {\n        autolink: opener(link),\n        autolinkProtocol: onenterdata,\n        autolinkEmail: onenterdata,\n        atxHeading: opener(heading),\n        blockQuote: opener(blockQuote),\n        characterEscape: onenterdata,\n        characterReference: onenterdata,\n        codeFenced: opener(codeFlow),\n        codeFencedFenceInfo: buffer,\n        codeFencedFenceMeta: buffer,\n        codeIndented: opener(codeFlow, buffer),\n        codeText: opener(codeText, buffer),\n        codeTextData: onenterdata,\n        data: onenterdata,\n        codeFlowValue: onenterdata,\n        definition: opener(definition),\n        definitionDestinationString: buffer,\n        definitionLabelString: buffer,\n        definitionTitleString: buffer,\n        emphasis: opener(emphasis),\n        hardBreakEscape: opener(hardBreak),\n        hardBreakTrailing: opener(hardBreak),\n        htmlFlow: opener(html, buffer),\n        htmlFlowData: onenterdata,\n        htmlText: opener(html, buffer),\n        htmlTextData: onenterdata,\n        image: opener(image),\n        label: buffer,\n        link: opener(link),\n        listItem: opener(listItem),\n        listItemValue: onenterlistitemvalue,\n        listOrdered: opener(list, onenterlistordered),\n        listUnordered: opener(list),\n        paragraph: opener(paragraph),\n        reference: onenterreference,\n        referenceString: buffer,\n        resourceDestinationString: buffer,\n        resourceTitleString: buffer,\n        setextHeading: opener(heading),\n        strong: opener(strong),\n        thematicBreak: opener(thematicBreak)\n      },\n      exit: {\n        atxHeading: closer(),\n        atxHeadingSequence: onexitatxheadingsequence,\n        autolink: closer(),\n        autolinkEmail: onexitautolinkemail,\n        autolinkProtocol: onexitautolinkprotocol,\n        blockQuote: closer(),\n        characterEscapeValue: onexitdata,\n        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n        characterReferenceValue: onexitcharacterreferencevalue,\n        codeFenced: closer(onexitcodefenced),\n        codeFencedFence: onexitcodefencedfence,\n        codeFencedFenceInfo: onexitcodefencedfenceinfo,\n        codeFencedFenceMeta: onexitcodefencedfencemeta,\n        codeFlowValue: onexitdata,\n        codeIndented: closer(onexitcodeindented),\n        codeText: closer(onexitcodetext),\n        codeTextData: onexitdata,\n        data: onexitdata,\n        definition: closer(),\n        definitionDestinationString: onexitdefinitiondestinationstring,\n        definitionLabelString: onexitdefinitionlabelstring,\n        definitionTitleString: onexitdefinitiontitlestring,\n        emphasis: closer(),\n        hardBreakEscape: closer(onexithardbreak),\n        hardBreakTrailing: closer(onexithardbreak),\n        htmlFlow: closer(onexithtmlflow),\n        htmlFlowData: onexitdata,\n        htmlText: closer(onexithtmltext),\n        htmlTextData: onexitdata,\n        image: closer(onexitimage),\n        label: onexitlabel,\n        labelText: onexitlabeltext,\n        lineEnding: onexitlineending,\n        link: closer(onexitlink),\n        listItem: closer(),\n        listOrdered: closer(),\n        listUnordered: closer(),\n        paragraph: closer(),\n        referenceString: onexitreferencestring,\n        resourceDestinationString: onexitresourcedestinationstring,\n        resourceTitleString: onexitresourcetitlestring,\n        resource: onexitresource,\n        setextHeading: closer(onexitsetextheading),\n        setextHeadingLineSequence: onexitsetextheadinglinesequence,\n        setextHeadingText: onexitsetextheadingtext,\n        strong: closer(),\n        thematicBreak: closer()\n      }\n    },\n    options.mdastExtensions || []\n  )\n  /** @type {CompileData} */\n\n  const data = {}\n  return compile\n  /**\n   * @param {Array<Event>} events\n   * @returns {Root}\n   */\n\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {CompileContext['stack']} */\n\n    const stack = [tree]\n    /** @type {CompileContext['tokenStack']} */\n\n    const tokenStack = []\n    /** @type {Array<number>} */\n\n    const listStack = []\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n\n    const context = {\n      stack,\n      tokenStack,\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    let index = -1\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    if (tokenStack.length > 0) {\n      const tail = tokenStack[tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    } // Figure out `root` position.\n\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n    index = -1\n\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token|undefined} */\n\n    let listItem\n    /** @type {number|undefined} */\n\n    let lineIndex\n    /** @type {number|undefined} */\n\n    let firstBlankLineIndex\n    /** @type {boolean|undefined} */\n\n    let atMarker\n\n    while (++index <= length) {\n      const event = events[index]\n\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          } // Fix position.\n\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        } // Create a new list item.\n\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          } // @ts-expect-error: `listItem` is most definitely defined, TS...\n\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    } // @ts-expect-error Patched.\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n  /**\n   * @type {CompileContext['setData']}\n   * @param [value]\n   */\n\n  function setData(key, value) {\n    data[key] = value\n  }\n  /**\n   * @type {CompileContext['getData']}\n   * @template {string} K\n   * @param {K} key\n   * @returns {CompileData[K]}\n   */\n\n  function getData(key) {\n    return data[key]\n  }\n  /**\n   * @param {Point} d\n   * @returns {Point}\n   */\n\n  function point(d) {\n    return {\n      line: d.line,\n      column: d.column,\n      offset: d.offset\n    }\n  }\n  /**\n   * @param {(token: Token) => Node} create\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function opener(create, and) {\n    return open\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n  /** @type {CompileContext['buffer']} */\n\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n  /**\n   * @type {CompileContext['enter']}\n   * @template {Node} N\n   * @this {CompileContext}\n   * @param {N} node\n   * @param {Token} token\n   * @param {OnEnterError} [errorHandler]\n   * @returns {N}\n   */\n\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler]) // @ts-expect-error: `end` will be patched later.\n\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n  /**\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function closer(and) {\n    return close\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n  /**\n   * @type {CompileContext['exit']}\n   * @this {CompileContext}\n   * @param {Token} token\n   * @param {OnExitError} [onExitError]\n   * @returns {Node}\n   */\n\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n\n    node.position.end = point(token.end)\n    return node\n  }\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n\n  function resume() {\n    return toString(this.stack.pop())\n  } //\n  // Handlers.\n  //\n\n  /** @type {Handle} */\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n  /** @type {Handle} */\n\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor =\n        /** @type {List} */\n        this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n  /** @type {Handle} */\n\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n  /** @type {Handle} */\n\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    const label = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitatxheadingsequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadinglinesequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n  /** @type {Handle} */\n\n  function onenterdata(token) {\n    const parent =\n      /** @type {Parent} */\n      this.stack[this.stack.length - 1]\n    /** @type {Node} */\n\n    let tail = parent.children[parent.children.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text() // @ts-expect-error: we’ll add `end` later.\n\n      tail.position = {\n        start: point(token.start)\n      } // @ts-expect-error: Assume `parent` accepts `text`.\n\n      parent.children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n  /** @type {Handle} */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n  /** @type {Handle} */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n  /** @type {Handle} */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node =\n      /** @type {InlineCode} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitlink() {\n    const context =\n      /** @type {Link & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitimage() {\n    const context =\n      /** @type {Image & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitlabeltext(token) {\n    const ancestor =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 2]\n    const string = this.sliceSerialize(token)\n    ancestor.label = decodeString(string)\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitlabel() {\n    const fragment =\n      /** @type {Fragment} */\n      this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // Assume a reference.\n\n    setData('inReference', true)\n\n    if (node.type === 'link') {\n      // @ts-expect-error: Assume static phrasing content.\n      node.children = fragment.children\n    } else {\n      node.alt = value\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n  /** @type {Handle} */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n  /** @type {Handle} */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node =\n      /** @type {LinkReference|ImageReference} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n\n    let value\n\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      // @ts-expect-error `decodeNamedCharacterReference` can return false for\n      // invalid named character references, but everything we’ve tokenized is\n      // valid.\n      value = decodeNamedCharacterReference(data)\n    }\n\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  } //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n  /** @returns {Code} */\n\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n  /** @returns {InlineCode} */\n\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n  /** @returns {Definition} */\n\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n  /** @returns {Emphasis} */\n\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n  /** @returns {Heading} */\n\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n  /** @returns {Break} */\n\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n  /** @returns {HTML} */\n\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n  /** @returns {Image} */\n\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n  /** @returns {Link} */\n\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n  /** @returns {Paragraph} */\n\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n  /** @returns {Strong} */\n\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n  /** @returns {Text} */\n\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n  /** @returns {ThematicBreak} */\n\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n/**\n * @param {Extension} combined\n * @param {Array<Extension|Array<Extension>>} extensions\n * @returns {Extension}\n */\n\nfunction configure(combined, extensions) {\n  let index = -1\n\n  while (++index < extensions.length) {\n    const value = extensions[index]\n\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n\n  return combined\n}\n/**\n * @param {Extension} combined\n * @param {Extension} extension\n * @returns {void}\n */\n\nfunction extension(combined, extension) {\n  /** @type {string} */\n  let key\n\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      const list = key === 'canContainEols' || key === 'transforms'\n      const maybe = own.call(combined, key) ? combined[key] : undefined\n      /* c8 ignore next */\n\n      const left = maybe || (combined[key] = list ? [] : {})\n      const right = extension[key]\n\n      if (right) {\n        if (list) {\n          // @ts-expect-error: `left` is an array.\n          combined[key] = [...left, ...right]\n        } else {\n          Object.assign(left, right)\n        }\n      }\n    }\n  }\n}\n/** @type {OnEnterError} */\n\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Event[]} events\n * @returns {Event[]}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist').Literal} Literal\n * @typedef {Object.<string, unknown>} Props\n * @typedef {Array.<Node>|string} ChildrenOrValue\n *\n * @typedef {(<T extends string, P extends Record<string, unknown>, C extends Node[]>(type: T, props: P, children: C) => {type: T, children: C} & P)} BuildParentWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P, value: string) => {type: T, value: string} & P)} BuildLiteralWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P) => {type: T} & P)} BuildVoidWithProps\n * @typedef {(<T extends string, C extends Node[]>(type: T, children: C) => {type: T, children: C})} BuildParent\n * @typedef {(<T extends string>(type: T, value: string) => {type: T, value: string})} BuildLiteral\n * @typedef {(<T extends string>(type: T) => {type: T})} BuildVoid\n */\n\nexport var u = /**\n * @type {BuildVoid & BuildVoidWithProps & BuildLiteral & BuildLiteralWithProps & BuildParent & BuildParentWithProps}\n */ (\n  /**\n   * @param {string} type Type of node\n   * @param {Props|ChildrenOrValue} [props] Additional properties for node (or `children` or `value`)\n   * @param {ChildrenOrValue} [value] `children` or `value` of node\n   * @returns {Node}\n   */\n  function (type, props, value) {\n    /** @type {Node} */\n    var node = {type: String(type)}\n\n    if (\n      (value === undefined || value === null) &&\n      (typeof props === 'string' || Array.isArray(props))\n    ) {\n      value = props\n    } else {\n      Object.assign(node, props)\n    }\n\n    if (Array.isArray(value)) {\n      node.children = value\n    } else if (value !== undefined && value !== null) {\n      node.value = String(value)\n    }\n\n    return node\n  }\n)\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {string} Type\n * @typedef {Object<string, unknown>} Props\n *\n * @typedef {null|undefined|Type|Props|TestFunctionAnything|Array.<Type|Props|TestFunctionAnything>} Test\n */\n\n/**\n * Check if a node passes a test\n *\n * @callback TestFunctionAnything\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} X\n * @callback TestFunctionPredicate\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is X}\n */\n\n/**\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\nexport const is =\n  /**\n   * Check if a node passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (<T extends Node>(node: unknown, test: T['type']|Partial<T>|TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|TestFunctionPredicate<T>>, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => node is T) &\n   *   ((node?: unknown, test?: Test, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number|null|undefined} [index] Position of `node` in `parent`\n     * @param {Parent|null|undefined} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is a `Node` (object with `type` set to non-empty `string`).\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\nexport const convert =\n  /**\n   * @type {(\n   *   (<T extends Node>(test: T['type']|Partial<T>|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n/**\n * @param {Array.<Type|Props|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to assert each property in `test` is represented in `node`, and each\n * values are strictly equal.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n *\n * @param {Type} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(...parameters) {\n    // @ts-expect-error: spreading is fine.\n    return Boolean(check.call(this, ...parameters))\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('./complex-types').Action} Action\n * @typedef {import('./complex-types').Index} Index\n * @typedef {import('./complex-types').ActionTuple} ActionTuple\n * @typedef {import('./complex-types').VisitorResult} VisitorResult\n * @typedef {import('./complex-types').Visitor} Visitor\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\n/**\n * Visit children of tree which pass a test\n *\n * @param tree Abstract syntax tree to walk\n * @param test Test node, optional\n * @param visitor Function to run for each node\n * @param reverse Visit the tree in reverse order, defaults to false\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types').Visitor<Node>} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array.<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Object.<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string|undefined} */\n        let name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array.<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n * @typedef {import('./complex-types').Visitor} Visitor\n */\n\nimport {visitParents, CONTINUE, SKIP, EXIT} from 'unist-util-visit-parents'\n\nexport {CONTINUE, SKIP, EXIT}\n\n/**\n * Visit children of tree which pass a test\n *\n * @param tree Abstract syntax tree to walk\n * @param test Test, optional\n * @param visitor Function to run for each node\n * @param reverse Fisit the tree in reverse, defaults to false\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types').Visitor} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array.<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {Record<string, unknown> & {type: string, position?: PositionLike|undefined}} NodeLike\n * @typedef {import('unist').Point} Point\n *\n * @typedef {Partial<Point>} PointLike\n *\n * @typedef PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n */\n\nexport const pointStart = point('start')\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike|Node} [node]\n * @returns {Position}\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start'|'end'} type\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the positional info of `node`.\n   *\n   * @param {NodeLike|Node} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    return {\n      line: point.line || null,\n      column: point.column || null,\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast').Definition} Definition\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `node`.\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} node\n */\nexport function definitions(node) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!node || !node.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(node, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /**\n   * Get a node from the bound definition cache.\n   *\n   * @param {string} identifier\n   * @returns {Definition|null}\n   */\n  function definition(identifier) {\n    const id = clean(identifier)\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('./index.js').H} H\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Transform an unknown node.\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction unknown(h, node) {\n  const data = node.data || {}\n\n  if (\n    'value' in node &&\n    !(\n      own.call(data, 'hName') ||\n      own.call(data, 'hProperties') ||\n      own.call(data, 'hChildren')\n    )\n  ) {\n    return h.augment(node, u('text', node.value))\n  }\n\n  return h(node, 'div', all(h, node))\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nexport function one(h, node, parent) {\n  const type = node && node.type\n  /** @type {Handler} */\n  let fn\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(h.handlers, type)) {\n    fn = h.handlers[type]\n  } else if (h.passThrough && h.passThrough.includes(type)) {\n    fn = returnNode\n  } else {\n    fn = h.unknownHandler\n  }\n\n  return (typeof fn === 'function' ? fn : unknown)(h, node, parent)\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction returnNode(h, node) {\n  // @ts-expect-error: Pass through custom node.\n  return 'children' in node ? {...node, children: all(h, node)} : node\n}\n\n/**\n * @param {H} h\n * @param {MdastNode} parent\n */\nexport function all(h, parent) {\n  /** @type {Array<Content>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n\n    while (++index < nodes.length) {\n      const result = one(h, nodes[index], parent)\n\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n","const characterReferences = {'\"': 'quot', '&': 'amp', '<': 'lt', '>': 'gt'}\n\n/**\n * Encode only the dangerous HTML characters.\n *\n * This ensures that certain characters which have special meaning in HTML are\n * dealt with.\n * Technically, we can skip `>` and `\"` in many cases, but CM includes them.\n *\n * @param {string} value\n * @returns {string}\n */\nexport function encode(value) {\n  return value.replace(/[\"&<>]/g, replace)\n\n  /**\n   * @param {string} value\n   * @returns {string}\n   */\n  function replace(value) {\n    // @ts-expect-error Hush, it’s fine.\n    return '&' + characterReferences[value] + ';'\n  }\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nfunction normalizeUri(value) {\n  /** @type {string[]} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Wrap `nodes` with line feeds between each entry.\n * Optionally adds line feeds at the start and end.\n *\n * @param {Array<Content>} nodes\n * @param {boolean} [loose=false]\n * @returns {Array<Content>}\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Content>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push(u('text', '\\n'))\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push(u('text', '\\n'))\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push(u('text', '\\n'))\n  }\n\n  return result\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {sanitizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {FootnoteReference} node\n */\nexport function footnoteReference(h, node) {\n  const id = String(node.identifier)\n  const safeId = sanitizeUri(id.toLowerCase())\n  const index = h.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    h.footnoteOrder.push(id)\n    h.footnoteCounts[id] = 1\n    counter = h.footnoteOrder.length\n  } else {\n    h.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = h.footnoteCounts[id]\n\n  return h(node, 'sup', [\n    h(\n      node.position,\n      'a',\n      {\n        href: '#' + h.clobberPrefix + 'fn-' + safeId,\n        id:\n          h.clobberPrefix +\n          'fnref-' +\n          safeId +\n          (reuseCounter > 1 ? '-' + reuseCounter : ''),\n        dataFootnoteRef: true,\n        ariaDescribedBy: 'footnote-label'\n      },\n      [u('text', String(counter))]\n    )\n  ])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @type {Handler}\n * @param {ImageReference|LinkReference} node\n * @returns {Content|Array<Content>}\n */\nexport function revert(h, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return u('text', '![' + node.alt + suffix)\n  }\n\n  const contents = all(h, node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift(u('text', '['))\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push(u('text', suffix))\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {ListItem} node\n * @param {List} parent\n */\nexport function listItem(h, node, parent) {\n  const result = all(h, node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const props = {}\n  /** @type {Array<Content>} */\n  const wrapped = []\n\n  if (typeof node.checked === 'boolean') {\n    /** @type {Element} */\n    let paragraph\n\n    if (\n      result[0] &&\n      result[0].type === 'element' &&\n      result[0].tagName === 'p'\n    ) {\n      paragraph = result[0]\n    } else {\n      paragraph = h(null, 'p', [])\n      result.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift(u('text', ' '))\n    }\n\n    paragraph.children.unshift(\n      h(null, 'input', {\n        type: 'checkbox',\n        checked: node.checked,\n        disabled: true\n      })\n    )\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    props.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < result.length) {\n    const child = result[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      wrapped.push(u('text', '\\n'))\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      wrapped.push(...child.children)\n    } else {\n      wrapped.push(child)\n    }\n  }\n\n  const tail = result[result.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || !('tagName' in tail) || tail.tagName !== 'p')) {\n    wrapped.push(u('text', '\\n'))\n  }\n\n  return h(node, 'li', props, wrapped)\n}\n\n/**\n * @param {List} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = node.spread\n  const children = node.children\n  let index = -1\n\n  while (!loose && ++index < children.length) {\n    loose = listItemLoose(children[index])\n  }\n\n  return Boolean(loose)\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return null\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Blockquote} node\n */\nexport function blockquote(h, node) {\n  return h(node, 'blockquote', wrap(all(h, node), true))\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Break} node\n * @returns {Array<Element|Text>}\n */\nexport function hardBreak(h, node) {\n  return [h(node, 'br'), u('text', '\\n')]\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Code} node\n */\nexport function code(h, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang && node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/)\n  /** @type {Properties} */\n  const props = {}\n\n  if (lang) {\n    props.className = ['language-' + lang]\n  }\n\n  const code = h(node, 'code', props, [u('text', value)])\n\n  if (node.meta) {\n    code.data = {meta: node.meta}\n  }\n\n  return h(node.position, 'pre', [code])\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Delete} node\n */\nexport function strikethrough(h, node) {\n  return h(node, 'del', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Emphasis} node\n */\nexport function emphasis(h, node) {\n  return h(node, 'em', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../index.js').Handler} Handler\n *\n * @todo\n *   `footnote` (or “inline note”) are a pandoc footnotes feature (`^[a note]`)\n *   that does not exist in GFM.\n *   We still have support for it, so that things remain working with\n *   `micromark-extension-footnote` and `mdast-util-footnote`, but in the future\n *   we might be able to remove it?\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n/**\n * @type {Handler}\n * @param {Footnote} node\n */\nexport function footnote(h, node) {\n  const footnoteById = h.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(h, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Heading} node\n */\nexport function heading(h, node) {\n  return h(node, 'h' + node.depth, all(h, node))\n}\n","/**\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Return either a `raw` node in dangerous mode, otherwise nothing.\n *\n * @type {Handler}\n * @param {HTML} node\n */\nexport function html(h, node) {\n  return h.dangerous ? h.augment(node, u('raw', node.value)) : null\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {revert} from '../revert.js'\n\n/**\n * @type {Handler}\n * @param {ImageReference} node\n */\nexport function imageReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {src: normalize(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\n\n/**\n * @type {Handler}\n * @param {Image} node\n */\nexport function image(h, node) {\n  /** @type {Properties} */\n  const props = {src: normalize(node.url), alt: node.alt}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {InlineCode} node\n */\nexport function inlineCode(h, node) {\n  return h(node, 'code', [u('text', node.value.replace(/\\r?\\n|\\r/g, ' '))])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {revert} from '../revert.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {LinkReference} node\n */\nexport function linkReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {href: normalize(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Link} node\n */\nexport function link(h, node) {\n  /** @type {Properties} */\n  const props = {href: normalize(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {List} node\n * @returns {Element}\n */\nexport function list(h, node) {\n  /** @type {Properties} */\n  const props = {}\n  const name = node.ordered ? 'ol' : 'ul'\n  const items = all(h, node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    props.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < items.length) {\n    const item = items[index]\n\n    if (\n      item.type === 'element' &&\n      item.tagName === 'li' &&\n      item.properties &&\n      Array.isArray(item.properties.className) &&\n      item.properties.className.includes('task-list-item')\n    ) {\n      props.className = ['contains-task-list']\n      break\n    }\n  }\n\n  return h(node, name, props, wrap(items, true))\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Paragraph} node\n */\nexport function paragraph(h, node) {\n  return h(node, 'p', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\nimport {wrap} from '../wrap.js'\n\n/**\n * @type {Handler}\n * @param {Root} node\n */\nexport function root(h, node) {\n  // @ts-expect-error `root`s are also fine.\n  return h.augment(node, u('root', wrap(all(h, node))))\n}\n","/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Strong} node\n */\nexport function strong(h, node) {\n  return h(node, 'strong', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Table} node\n */\nexport function table(h, node) {\n  const rows = node.children\n  let index = -1\n  const align = node.align || []\n  /** @type {Array<Element>} */\n  const result = []\n\n  while (++index < rows.length) {\n    const row = rows[index].children\n    const name = index === 0 ? 'th' : 'td'\n    /** @type {Array<Content>} */\n    const out = []\n    let cellIndex = -1\n    const length = node.align ? align.length : row.length\n\n    while (++cellIndex < length) {\n      const cell = row[cellIndex]\n      out.push(\n        h(cell, name, {align: align[cellIndex]}, cell ? all(h, cell) : [])\n      )\n    }\n\n    result[index] = h(rows[index], 'tr', wrap(out, true))\n  }\n\n  return h(\n    node,\n    'table',\n    wrap(\n      [h(result[0].position, 'thead', wrap([result[0]], true))].concat(\n        result[1]\n          ? h(\n              {\n                start: pointStart(result[1]),\n                end: pointEnd(result[result.length - 1])\n              },\n              'tbody',\n              wrap(result.slice(1), true)\n            )\n          : []\n      ),\n      true\n    )\n  )\n}\n","/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {trimLines} from 'trim-lines'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Text} node\n */\nexport function text(h, node) {\n  return h.augment(node, u('text', trimLines(String(node.value))))\n}\n","/**\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n */\n\n/**\n * @type {Handler}\n * @param {ThematicBreak} [node]\n * @returns {Element}\n */\nexport function thematicBreak(h, node) {\n  return h(node, 'hr')\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('hast').Root|import('hast').Parent['children'][number]} HastNode\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').ElementContent} Content\n * @typedef {import('unist-util-position').PositionLike} PositionLike\n *\n * @typedef EmbeddedHastFields\n * @property {string} [hName] Defines the tag name of an element\n * @property {Properties} [hProperties] Defines the properties of an element\n * @property {Array<Content>} [hChildren] Defines the (hast) children of an element\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} Data unist data with embedded hast fields\n *\n * @typedef {MdastNode & {data?: Data}} NodeWithData unist node with embedded hast data\n *\n * @callback Handler\n * @param {H} h Handle context\n * @param {any} node mdast node to handle\n * @param {Parent|null} parent Parent of `node`\n * @returns {Content|Array<Content>|null|undefined} hast node\n *\n * @callback HFunctionProps\n * @param {MdastNode|PositionLike|null|undefined} node mdast node or unist position\n * @param {string} tagName HTML tag name\n * @param {Properties} props Properties\n * @param {Array<Content>?} [children] hast content\n * @returns {Element}\n *\n * @callback HFunctionNoProps\n * @param {MdastNode|PositionLike|null|undefined} node mdast node or unist position\n * @param {string} tagName HTML tag name\n * @param {Array<Content>?} [children] hast content\n * @returns {Element}\n *\n * @typedef HFields\n * @property {boolean} dangerous Whether HTML is allowed\n * @property {string} clobberPrefix Prefix to use to prevent DOM clobbering\n * @property {string} footnoteLabel Label to use to introduce the footnote section\n * @property {string} footnoteLabelTagName HTML used for the footnote label\n * @property {Properties} footnoteLabelProperties properties on the HTML tag used for the footnote label\n * @property {string} footnoteBackLabel Label to use to go back to a footnote call from the footnote section\n * @property {(identifier: string) => Definition|null} definition Definition cache\n * @property {Record<string, FootnoteDefinition>} footnoteById Footnote cache\n * @property {Array<string>} footnoteOrder Order in which footnotes occur\n * @property {Record<string, number>} footnoteCounts Counts the same footnote was used\n * @property {Handlers} handlers Applied handlers\n * @property {Handler} unknownHandler Handler for any none not in `passThrough` or otherwise handled\n * @property {(left: NodeWithData|PositionLike|null|undefined, right: Content) => Content} augment Like `h` but lower-level and usable on non-elements.\n * @property {Array<string>} passThrough List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n * @property {boolean} [allowDangerousHtml=false]\n *   Whether to allow `html` nodes and inject them as `raw` HTML\n * @property {string} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute to prevent it from *clobbering*.\n *   attributes.\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=x></p>\n *   <script>alert(x)</script>\n *   ```\n *\n *   Elements by their ID are made available in browsers on the `window` object.\n *   Using a prefix prevents this from being a problem.\n * @property {string} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {string} [footnoteLabelTagName='h2']\n *   HTML tag to use for the footnote label.\n *   Can be changed to match your document structure and play well with your choice of css.\n * @property {Properties} [footnoteLabelProperties={id: 'footnote-label', className: ['sr-only']}]\n *   Properties to use on the footnote label.\n *   A 'sr-only' class is added by default to hide this from sighted users.\n *   Change it to make the label visible, or add classes for other purposes.\n * @property {string} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {Handlers} [handlers]\n *   Object mapping mdast nodes to functions handling them\n * @property {Array<string>} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast\n * @property {Handler} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Map of node types to handlers\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} H\n *   Handle context\n */\n\nimport {u} from 'unist-builder'\nimport {visit} from 'unist-util-visit'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {one} from './traverse.js'\nimport {footer} from './footer.js'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Factory to transform.\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {H} `h` function\n */\nfunction factory(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, FootnoteDefinition>} */\n  const footnoteById = {}\n\n  h.dangerous = dangerous\n  h.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  h.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  h.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  h.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    id: 'footnote-label',\n    className: ['sr-only']\n  }\n  h.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  h.definition = definitions(tree)\n  h.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  h.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  h.footnoteCounts = {}\n  h.augment = augment\n  h.handlers = {...handlers, ...settings.handlers}\n  h.unknownHandler = settings.unknownHandler\n  h.passThrough = settings.passThrough\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return h\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   * @param {(NodeWithData|PositionLike)?} left\n   * @param {Content} right\n   * @returns {Content}\n   */\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {Data} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  function h(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n}\n\n/**\n * Transform `tree` (an mdast node) to a hast node.\n *\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {HastNode|null|undefined} hast node\n */\nexport function toHast(tree, options) {\n  const h = factory(tree, options)\n  const node = one(h, tree, null)\n  const foot = footer(h)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push(u('text', '\\n'), foot)\n  }\n\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n\nexport {handlers as defaultHandlers} from './handlers/index.js'\n","/**\n * @typedef {Object} PointLike\n * @property {number} [line]\n * @property {number} [column]\n * @property {number} [offset]\n *\n * @typedef {Object} PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n *\n * @typedef {Object} NodeLike\n * @property {PositionLike} [position]\n */\n\n/**\n * Check if `node` is *generated*.\n *\n * @param {NodeLike} [node]\n * @returns {boolean}\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('mdast').BlockContent} BlockContent\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('./index.js').H} H\n */\n\nimport {sanitizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\nimport {wrap} from './wrap.js'\n\n/**\n * @param {H} h\n * @returns {Element|null}\n */\nexport function footer(h) {\n  let index = -1\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n\n  while (++index < h.footnoteOrder.length) {\n    const def = h.footnoteById[h.footnoteOrder[index].toUpperCase()]\n\n    if (!def) {\n      continue\n    }\n\n    const content = all(h, def)\n    const id = String(def.identifier)\n    const safeId = sanitizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= h.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            h.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: h.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: h.clobberPrefix + 'fn-' + safeId},\n      children: wrap(content, true)\n    }\n\n    if (def.position) {\n      listItem.position = def.position\n    }\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return null\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: h.footnoteLabelTagName,\n        properties: JSON.parse(JSON.stringify(h.footnoteLabelProperties)),\n        children: [u('text', h.footnoteLabel)]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * @param {unknown} thing\n * @returns {boolean}\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  var value =\n    // @ts-ignore looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-ignore looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://html.spec.whatwg.org/#space-character>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","export const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'table'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: boolean}} TableCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableCellProps>} TableCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableCellComponent|ReactMarkdownNames} td\n * @property {TableCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = [\n    name,\n    position.start.line,\n    position.start.column,\n    index\n  ].join('-')\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && options.transformLinkUri) {\n    properties.href = options.transformLinkUri(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map((d) => String(d))\n    .join('')\n}\n","/**\n * @typedef {Object} StringifyOptions\n * @property {boolean} [padLeft=true] Whether to pad a space before a token (`boolean`, default: `true`).\n * @property {boolean} [padRight=false] Whether to pad a space after a token (`boolean`, default: `false`).\n */\n\n/**\n * Parse comma separated tokens to an array.\n *\n * @param {string} value\n * @returns {Array.<string>}\n */\nexport function parse(value) {\n  /** @type {Array.<string>} */\n  var tokens = []\n  var input = String(value || '')\n  var index = input.indexOf(',')\n  var start = 0\n  /** @type {boolean} */\n  var end\n  /** @type {string} */\n  var token\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings to comma separated tokens.\n *\n * @param {Array.<string|number>} values\n * @param {StringifyOptions} [options]\n * @returns {string}\n */\nexport function stringify(values, options) {\n  var settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  if (values[values.length - 1] === '') {\n    values = values.concat('')\n  }\n\n  return values\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space separated tokens to an array of strings.\n *\n * @param {string} value Space separated tokens\n * @returns {Array.<string>} Tokens\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated tokens.\n *\n * @param {Array.<string|number>} values Tokens\n * @returns {string} Space separated tokens\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {uriTransformer} from './uri-transformer.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'plugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.defaultProps = {transformLinkUri: uriTransformer}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n"],"names":["hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","module","exports","extend","src","copy","copyIsArray","clone","arguments","i","length","deep","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","trim","str","replace","style","TypeError","lineno","column","updatePosition","lines","match","lastIndexOf","position","start","line","node","Position","whitespace","this","end","source","content","errorsList","error","msg","err","Error","reason","filename","silent","push","re","m","exec","slice","comments","rules","c","comment","pos","charAt","type","declaration","prop","val","ret","property","decl","decls","declarations","isBuffer","encodeCache","encode","string","exclude","keepEscaped","l","code","nextCode","cache","result","defaultChars","ch","String","fromCharCode","test","toUpperCase","charCodeAt","getEncodeCache","encodeURIComponent","componentChars","u","b","Symbol","for","d","e","f","g","h","k","n","p","q","t","v","a","r","$$typeof","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","SuspenseList","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isSuspenseList","isValidElementType","getModuleId","typeOf","parse","require","iterator","output","hasIterator","len","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","done","Promise","then","_asyncToGenerator","fn","self","args","apply","undefined","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","_objectSpread2","forEach","getOwnPropertyDescriptors","defineProperties","_regeneratorRuntime","Op","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","invoke","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","reverse","pop","skipTempReset","prev","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","_construct","Parent","Class","isNativeReflectConstruct","Reflect","construct","bind","instance","Function","_wrapNativeSuper","_cache","Map","indexOf","has","get","set","Wrapper","stringifyPosition","point","index","VFileMessage","place","origin","parts","message","stack","fatal","ruleId","actual","expected","file","url","note","path","basename","ext","assertPath","seenNonSlash","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","join","joined","segments","normalize","sep","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","JSON","stringify","proc","cwd","isUrl","fileURLOrPath","href","urlToPath","URL","protocol","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","order","VFile","buffer","data","messages","history","stored","map","includes","assertNonEmpty","assertPart","stem","encoding","part","bail","middleware","callback","called","parameters","fnExpectsCallback","unified","base","frozen","transformers","fns","pipeline","run","middlewareIndex","use","middelware","trough","attachers","namespace","freezeIndex","processor","assertUnfrozen","own","Parser","Compiler","freeze","attacher","transformer","Number","POSITIVE_INFINITY","settings","addPlugin","addList","addPreset","assign","add","plugin","plugins","isPlainObj","doc","vfile","assertParser","newable","assertCompiler","assertNode","compile","executor","tree","runSync","assertDone","process","processSync","destination","asyncName","Boolean","looksLikeAVFile","includeImageAlt","one","alt","all","children","splice","list","remove","items","chunkStart","from","unshift","combineExtensions","extensions","syntaxExtension","extension","hook","left","right","constructs","existing","before","asciiAlpha","regexCheck","asciiDigit","asciiHexDigit","asciiAlphanumeric","asciiPunctuation","asciiAtext","asciiControl","markdownLineEndingOrSpace","markdownLineEnding","markdownSpace","unicodeWhitespace","unicodePunctuation","regex","factorySpace","effects","ok","max","limit","size","enter","prefix","consume","exit","tokenize","previous","contentStart","attempt","parser","contentInitial","lineStart","token","contentType","document","childFlow","childToken","lineStartOffset","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","events","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","check","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","offset","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","seen","nok","disable","null","blankLine","partial","subtokenize","event","lineIndex","otherIndex","otherEvent","subevents","more","jumps","_isInFirstContentOfListItem","subcontent","_container","eventIndex","startPosition","startPositions","tokenizer","childEvents","gaps","current","adjust","breaks","_gfmTasklistFirstContentOfListItem","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","initializeFactory","text","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","bufferIndex","tabs","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","view","startIndex","startBufferIndex","endIndex","endBufferIndex","sliceChunks","chunkIndex","go","_","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","resolveTo","thematicBreak","marker","sequence","initialSize","kind","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","notBlank","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","open","after","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","factoryLabel","markerType","label","labelEscape","factoryTitle","atFirstTitleBreak","atTitleBreak","title","titleEscape","factoryWhitespace","normalizeIdentifier","toLowerCase","definition","identifier","labelAfter","titleConstruct","defined","codeIndented","afterStartPrefix","afterPrefix","indentedContent","headingAtx","fenceOpenInside","headingBreak","setextUnderline","paragraph","closingSequence","closingSequenceEnd","heading","htmlBlockNames","htmlRawNames","htmlFlow","startTag","declarationStart","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","htmlLineEnd","continuationRawEndTag","codeFenced","closingFenceConstruct","closingSequenceStart","sizeOpen","nonLazyLine","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","meta","element","createElement","decodeNamedCharacterReference","characterReference","innerHTML","char","textContent","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","close","media","group","insideSpan","destinationAfter","between","afterLabel","labelStartImage","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","commentStart","commentStartDash","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelStartLink","hardBreakEscape","codeText","gap","tailExitIndex","headEnterIndex","resolveText","search","decodeNumericCharacterReference","parseInt","characterEscapeOrReference","decodeString","decode","$0","$1","$2","head","hex","fromMarkdown","config","configure","transforms","canContainEols","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","mdastExtensions","tokenStack","listStack","resume","setData","getData","prepareList","handler","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","lang","depth","parent","referenceType","ancestor","fragment","ordered","spread","checked","compiler","postprocess","defaultConstructs","concat","atCarriageReturn","endPosition","lastIndex","Math","ceil","preprocess","combined","props","convert","castFactory","typeFactory","anyFactory","propsFactory","tests","checks","visitParents","visitor","is","step","factory","parents","visit","subresult","grandparents","toResult","pointStart","pointEnd","clean","unknown","augment","handlers","passThrough","returnNode","unknownHandler","nodes","characterReferences","sanitizeUri","skip","normalizeUri","colon","questionMark","numberSign","slash","loose","footnoteReference","counter","id","safeId","footnoteOrder","footnoteCounts","reuseCounter","clobberPrefix","dataFootnoteRef","ariaDescribedBy","revert","subtype","suffix","contents","listItemLoose","trimLine","codePointAt","blockquote","break","className","delete","footnote","footnoteById","no","dangerous","imageReference","inlineCode","linkReference","listLoose","wrapped","disabled","child","properties","root","table","rows","align","row","out","cellIndex","cell","last","trimLines","toml","ignore","yaml","footnoteDefinition","allowDangerousHtml","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","footnoteBackLabel","definitions","hName","hProperties","hChildren","ctx","toHast","foot","listItems","referenceIndex","backReferences","backReference","dataFootnoteBackref","ariaLabel","tailTail","dataFootnotes","footer","bridge","mutate","Schema","normal","space","merge","Info","attribute","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","powers","increment","types","DefinedInfo","mask","transform","attributes","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","default","defer","dir","dirName","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","loop","low","manifest","maxLength","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rowSpan","sandbox","scope","scoped","seamless","selected","shape","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","tabIndex","translate","typeMustMatch","useMap","width","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","color","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","opacity","operator","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","htmlBase","svgBase","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","unwrapDisallowed","protocols","thing","valid","dash","cap","kebab","camelcase","hastToReact","tableElements","Set","childrenToReact","childIndex","toReact","skipHtml","parentSchema","schema","addProperty","listDepth","component","components","basic","React","ReactIs","linkTarget","transformLinkUri","inline","level","transformImageUri","input","getInputElement","getElementsBeforeCount","textAlign","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","count","Type","rest","dashes","find","padRight","padLeft","commas","styleReplacer","parseStyle","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","console","warn","remarkParse","remarkPlugins","remarkRehype","remarkRehypeOptions","rehypePlugins","hastNode","defaultProps","uri","first","propTypes","PropTypes"],"sourceRoot":""}